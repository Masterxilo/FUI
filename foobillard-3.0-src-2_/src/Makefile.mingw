#
# Tweaked FooBillard Makefile by Kein-Hong Man <mkh@pl.jaring.my>
#
# * absolute paths will need to be changed (see below)
# * run in the src/ directory as: make -f Makefile.mingw
# * changed names and order of libraries for Mingw
# * added resource file compilation and linking
# * please copy executable manually; auto install probably broken
# * initially generated using the following configure options:
#   --enable-SDL --disable-nvidia
#
# 20040422 FooBillard 3.0
# * removed -DNO_NV_BUMPREF -DNO_NV_FRESNEL, program checks GL for them
# *
#
# LDADD -- libraries included here
# foobillard_LDFLAGS -- static linking flags here
# foobillard$(EXEEXT) -- executable stripped here
# Set the variable below to your corresponding MSYS path:
MYDIR = /home/khman/foobillard-3.0-src
#
#

# Makefile.in generated by automake 1.7.2 from Makefile.am.
# src/Makefile.  Generated from Makefile.in by configure.

# Copyright 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002
# Free Software Foundation, Inc.
# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.



srcdir = .
top_srcdir = ..

pkgdatadir = $(datadir)/foobillard
pkglibdir = $(libdir)/foobillard
pkgincludedir = $(includedir)/foobillard
top_builddir = ..

am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
INSTALL = /bin/install -c
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
ACLOCAL = ${SHELL} ${MYDIR}/missing --run aclocal-1.7
AMDEP_FALSE = #
AMDEP_TRUE =
AMTAR = ${SHELL} ${MYDIR}/missing --run tar
AUTOCONF = ${SHELL} ${MYDIR}/missing --run autoconf
AUTOHEADER = ${SHELL} ${MYDIR}/missing --run autoheader
AUTOMAKE = ${SHELL} ${MYDIR}/missing --run automake-1.7
AWK = gawk
CC = gcc
CCDEPMODE = depmode=gcc3
CFLAGS = -g -O2 -isystem /usr/include
CPP = gcc -E
CPPFLAGS =
CXX = g++
CXXDEPMODE = depmode=gcc3
CXXFLAGS = -g -O2
CYGPATH_W = echo
DEFS = -DHAVE_CONFIG_H
DEPDIR = .deps
ECHO_C =
ECHO_N = -n
ECHO_T =
EGREP = grep -E
EXEEXT = .exe
INSTALL_DATA = ${INSTALL} -m 644
INSTALL_PROGRAM = ${INSTALL}
INSTALL_SCRIPT = ${INSTALL}
INSTALL_STRIP_PROGRAM = ${SHELL} $(install_sh) -c -s
LDFLAGS =
LIBOBJS =
LIBS =
LTLIBOBJS =
MAKEINFO = ${SHELL} ${MYDIR}/missing --run makeinfo
OBJEXT = o
PACKAGE = foobillard
PACKAGE_BUGREPORT =
PACKAGE_NAME =
PACKAGE_STRING =
PACKAGE_TARNAME =
PACKAGE_VERSION =
PATH_SEPARATOR = :
SET_MAKE =
SHELL = /bin/sh
STRIP =
USE_DEBUG_FALSE =
USE_DEBUG_TRUE = #
USE_NVIDIA_FALSE =
USE_NVIDIA_TRUE = #
USE_SDL_FALSE = #
USE_SDL_TRUE =
USE_SOUND_FALSE = #
USE_SOUND_TRUE =
VERSION = 3.0
X_CFLAGS =
X_EXTRA_LIBS =
X_LIBS =
X_PRE_LIBS =
ac_ct_CC = gcc
ac_ct_CXX = g++
ac_ct_STRIP =
am__fastdepCC_FALSE = #
am__fastdepCC_TRUE =
am__fastdepCXX_FALSE = #
am__fastdepCXX_TRUE =
am__include = include
am__quote =
bindir = ${exec_prefix}/bin
build_alias =
datadir = ${prefix}/share
exec_prefix = ${prefix}
host_alias =
includedir = ${prefix}/include
infodir = ${prefix}/info
install_sh = ${MYDIR}/install-sh
libdir = ${exec_prefix}/lib
libexecdir = ${exec_prefix}/libexec
localstatedir = ${prefix}/var
mandir = ${prefix}/man
oldincludedir = /usr/include
prefix = /usr/local
program_transform_name = s,x,x,
sbindir = ${exec_prefix}/sbin
sharedstatedir = ${prefix}/com
sysconfdir = ${prefix}/etc
target_alias =
bin_PROGRAMS = foobillard

foobillard_SOURCES = billard3d.c \
	       	     billmove.c \
	       	     billmove.h \
		     billard.c \
		     billard.h \
                     vmath.c \
                     vmath.h \
                     ball.c \
                     ball.h \
                     png_loader.c \
                     png_loader.h \
                     table.c \
                     table.h \
                     queue.c \
                     queue.h \
                     aiplayer.c \
                     aiplayer.h \
                     options.c \
                     options.h \
                     evaluate_move.c \
                     evaluate_move.h \
                     helpscreen.c \
                     helpscreen.h \
                     textobj.c \
                     textobj.h \
                     font.c \
                     font.h \
                     sys_stuff.c \
                     sys_stuff.h \
                     net_socket.c \
                     net_socket.h \
                     sound_stuff.c \
                     sound_stuff.h \
                     menu.c \
                     menu.h \
                     gamemenu.h \
                     player.h \
                     bumpref.c \
                     bumpref.h


INCLUDES = -DNDEBUG -DDATA_DIRECTORY='"${pkgdatadir}/"'
#LIBDIR = /usr/X11R6/lib
#INCDIR = /usr/X11R6/include

#CC     = gcc
#CXXFLAGS = -O6 -s
#CFLAGS = -DXMESA -Wall -O3 -I$(INCDIR)
#CFLAGS = -Wall -O3 -I$(INCDIR) `freetype-config --cflags`
SDL_CFLAGS = `sdl-config --cflags` -DUSE_SDL
#SDL_CFLAGS =
#SDL_LIBS = `sdl-config --libs`
SDL_LIBS = -L/usr/lib -lmingw32 -lSDLmain -lSDL.dll -mwindows
#SDL_LIBS =
GLUT_LIBS =
#GLUT_LIBS = -lglut

#DEBUG_CFLAGS = -DDEBUG
DEBUG_CFLAGS =

# no need in Win32, we rely on what OpenGL actually has to offer
#NVIDIA_CFLAGS = -DNO_NV_BUMPREF -DNO_NV_FRESNEL
NVIDIA_CFLAGS =

SOUND_CFLAGS = -DUSE_SOUND
#SOUND_CFLAGS =

AM_CFLAGS = -Wall `freetype-config --cflags` ${SDL_CFLAGS} ${NVIDIA_CFLAGS} ${SOUND_CFLAGS} ${DEBUG_CFLAGS}

#LIBS   = -L$(LIBDIR) -lglut -lGLU -lGL -lXext -lXaw -lm -lXi -lpng -lz
#AM_LDFLAGS = ${all_libraries} `freetype-config --libs` ${SDL_LIBS} ${GLUT_LIBS}
AM_LDFLAGS = ${all_libraries} -lfreetype.dll -lpng13.dll -lz ${SDL_LIBS} ${GLUT_LIBS}
#LDADD = ${X_PRE_LIBS} ${X_LIBS} ${X_EXTRA_LIBS} -lGL -lGLU -lXaw -lm -lXi -lpng -lz -L/home/floh/nvsdk/OpenGL/lib/ -lnvparse
#LDADD = ${X_PRE_LIBS} ${X_LIBS} ${X_EXTRA_LIBS} -lGL -lGLU -lXaw -lm -lXi -lpng -lz
#LDADD = ${X_PRE_LIBS} ${X_LIBS} ${X_EXTRA_LIBS} -lopengl32 -lglu32 -lwsock32 -lm -lpng -lz
LDADD = -lopengl32 -lglu32 -lwsock32 -lm -lmsvcrt -lgw32c
# libgw32c is needed for Freetype static linking
# gw32c is after msvcrt so that msvcrt calls are preferred
#LDADD = -lopengl32 -lglu32 -lwsock32 -lm -lpng -lz -lgw32c
subdir = src
mkinstalldirs = $(SHELL) $(top_srcdir)/mkinstalldirs
CONFIG_HEADER = config.h
CONFIG_CLEAN_FILES =
bin_PROGRAMS = foobillard$(EXEEXT)
PROGRAMS = $(bin_PROGRAMS)

am_foobillard_OBJECTS = billard3d.$(OBJEXT) billmove.$(OBJEXT) \
	billard.$(OBJEXT) vmath.$(OBJEXT) ball.$(OBJEXT) \
	png_loader.$(OBJEXT) table.$(OBJEXT) queue.$(OBJEXT) \
	aiplayer.$(OBJEXT) options.$(OBJEXT) evaluate_move.$(OBJEXT) \
	helpscreen.$(OBJEXT) textobj.$(OBJEXT) font.$(OBJEXT) \
	sys_stuff.$(OBJEXT) net_socket.$(OBJEXT) sound_stuff.$(OBJEXT) \
	menu.$(OBJEXT) bumpref.$(OBJEXT)
foobillard_OBJECTS = $(am_foobillard_OBJECTS)
foobillard_LDADD = $(AM_LDFLAGS) $(LDADD)
foobillard_DEPENDENCIES =
foobillard_LDFLAGS = -s -static
#foobillard_LDFLAGS =

DEFAULT_INCLUDES =  -I. -I$(srcdir) -I.
depcomp = $(SHELL) $(top_srcdir)/depcomp
am__depfiles_maybe = depfiles
DEP_FILES = ./$(DEPDIR)/aiplayer.Po ./$(DEPDIR)/ball.Po \
	./$(DEPDIR)/billard.Po ./$(DEPDIR)/billard3d.Po \
	./$(DEPDIR)/billmove.Po ./$(DEPDIR)/bumpref.Po \
	./$(DEPDIR)/evaluate_move.Po ./$(DEPDIR)/font.Po \
	./$(DEPDIR)/helpscreen.Po ./$(DEPDIR)/menu.Po \
	./$(DEPDIR)/net_socket.Po ./$(DEPDIR)/options.Po \
	./$(DEPDIR)/png_loader.Po ./$(DEPDIR)/queue.Po \
	./$(DEPDIR)/sound_stuff.Po ./$(DEPDIR)/sys_stuff.Po \
	./$(DEPDIR)/table.Po ./$(DEPDIR)/textobj.Po \
	./$(DEPDIR)/vmath.Po
COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
CCLD = $(CC)
LINK = $(CCLD) $(AM_CFLAGS) $(CFLAGS) $(LDFLAGS) -o $@
DIST_SOURCES = $(foobillard_SOURCES)
DIST_COMMON = Makefile.am Makefile.in config.h.in
SOURCES = $(foobillard_SOURCES)

all: config.h
	$(MAKE) -f Makefile.mingw $(AM_MAKEFLAGS) all-am

.SUFFIXES:
.SUFFIXES: .c .o .obj
$(srcdir)/Makefile.in:  Makefile.am  $(top_srcdir)/configure.in $(ACLOCAL_M4)
	cd $(top_srcdir) && \
	  $(AUTOMAKE) --gnu  src/Makefile
Makefile.mingw:  $(srcdir)/Makefile.in  $(top_builddir)/config.status
	cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)

config.h: stamp-h1
	@if test ! -f $@; then \
	  rm -f stamp-h1; \
	  $(MAKE) -f Makefile.mingw stamp-h1; \
	else :; fi

stamp-h1: $(srcdir)/config.h.in $(top_builddir)/config.status
	@rm -f stamp-h1
	cd $(top_builddir) && $(SHELL) ./config.status src/config.h

$(srcdir)/config.h.in:  $(top_srcdir)/configure.in $(ACLOCAL_M4)
	cd $(top_srcdir) && $(AUTOHEADER)
	touch $(srcdir)/config.h.in

distclean-hdr:
	-rm -f config.h stamp-h1
binPROGRAMS_INSTALL = $(INSTALL_PROGRAM)
install-binPROGRAMS: $(bin_PROGRAMS)
	@$(NORMAL_INSTALL)
	$(mkinstalldirs) $(DESTDIR)$(bindir)
	@list='$(bin_PROGRAMS)'; for p in $$list; do \
	  p1=`echo $$p|sed 's/$(EXEEXT)$$//'`; \
	  if test -f $$p \
	  ; then \
	    f=`echo "$$p1" | sed 's,^.*/,,;$(transform);s/$$/$(EXEEXT)/'`; \
	   echo " $(INSTALL_PROGRAM_ENV) $(binPROGRAMS_INSTALL) $$p $(DESTDIR)$(bindir)/$$f"; \
	   $(INSTALL_PROGRAM_ENV) $(binPROGRAMS_INSTALL) $$p $(DESTDIR)$(bindir)/$$f || exit 1; \
	  else :; fi; \
	done

uninstall-binPROGRAMS:
	@$(NORMAL_UNINSTALL)
	@list='$(bin_PROGRAMS)'; for p in $$list; do \
	  f=`echo "$$p" | sed 's,^.*/,,;s/$(EXEEXT)$$//;$(transform);s/$$/$(EXEEXT)/'`; \
	  echo " rm -f $(DESTDIR)$(bindir)/$$f"; \
	  rm -f $(DESTDIR)$(bindir)/$$f; \
	done

clean-binPROGRAMS:
	-test -z "$(bin_PROGRAMS)" || rm -f $(bin_PROGRAMS)
# fixed to strip executable
foobillard$(EXEEXT): $(foobillard_OBJECTS) $(foobillard_DEPENDENCIES) foobillardrc.o
	@rm -f foobillard$(EXEEXT)
	$(LINK) $(foobillard_LDFLAGS) $(foobillard_OBJECTS) foobillardrc.o $(foobillard_LDADD) $(LIBS)
	strip foobillard$(EXEEXT)

mostlyclean-compile:
	-rm -f *.$(OBJEXT) core *.core *.res

distclean-compile:
	-rm -f *.tab.c

include ./$(DEPDIR)/aiplayer.Po
include ./$(DEPDIR)/ball.Po
include ./$(DEPDIR)/billard.Po
include ./$(DEPDIR)/billard3d.Po
include ./$(DEPDIR)/billmove.Po
include ./$(DEPDIR)/bumpref.Po
include ./$(DEPDIR)/evaluate_move.Po
include ./$(DEPDIR)/font.Po
include ./$(DEPDIR)/helpscreen.Po
include ./$(DEPDIR)/menu.Po
include ./$(DEPDIR)/net_socket.Po
include ./$(DEPDIR)/options.Po
include ./$(DEPDIR)/png_loader.Po
include ./$(DEPDIR)/queue.Po
include ./$(DEPDIR)/sound_stuff.Po
include ./$(DEPDIR)/sys_stuff.Po
include ./$(DEPDIR)/table.Po
include ./$(DEPDIR)/textobj.Po
include ./$(DEPDIR)/vmath.Po

distclean-depend:
	-rm -rf ./$(DEPDIR)

foobillardrc.o:	foobillard.rc foobillard.ico
	windres foobillard.rc $@

.c.o:
	if $(COMPILE) -MT $@ -MD -MP -MF "$(DEPDIR)/$*.Tpo" \
	  -c -o $@ `test -f '$<' || echo '$(srcdir)/'`$<; \
	then mv "$(DEPDIR)/$*.Tpo" "$(DEPDIR)/$*.Po"; \
	else rm -f "$(DEPDIR)/$*.Tpo"; exit 1; \
	fi
#	source='$<' object='$@' libtool=no \
#	depfile='$(DEPDIR)/$*.Po' tmpdepfile='$(DEPDIR)/$*.TPo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(COMPILE) -c `test -f '$<' || echo '$(srcdir)/'`$<

.c.obj:
	if $(COMPILE) -MT $@ -MD -MP -MF "$(DEPDIR)/$*.Tpo" \
	  -c -o $@ `if test -f '$<'; then $(CYGPATH_W) '$<'; else $(CYGPATH_W) '$(srcdir)/$<'; fi`; \
	then mv "$(DEPDIR)/$*.Tpo" "$(DEPDIR)/$*.Po"; \
	else rm -f "$(DEPDIR)/$*.Tpo"; exit 1; \
	fi
#	source='$<' object='$@' libtool=no \
#	depfile='$(DEPDIR)/$*.Po' tmpdepfile='$(DEPDIR)/$*.TPo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(COMPILE) -c `if test -f '$<'; then $(CYGPATH_W) '$<'; else $(CYGPATH_W) '$(srcdir)/$<'; fi`
uninstall-info-am:

ETAGS = etags
ETAGSFLAGS =

CTAGS = ctags
CTAGSFLAGS =

tags: TAGS

ID: $(HEADERS) $(SOURCES) $(LISP) $(TAGS_FILES)
	list='$(SOURCES) $(HEADERS) $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	mkid -fID $$unique

TAGS:  $(HEADERS) $(SOURCES) config.h.in $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	tags=; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS) config.h.in $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	test -z "$(ETAGS_ARGS)$$tags$$unique" \
	  || $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	     $$tags $$unique

ctags: CTAGS
CTAGS:  $(HEADERS) $(SOURCES) config.h.in $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	tags=; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS) config.h.in $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	test -z "$(CTAGS_ARGS)$$tags$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$tags $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && cd $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) $$here

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)

top_distdir = ..
distdir = $(top_distdir)/$(PACKAGE)-$(VERSION)

distdir: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's|.|.|g'`; \
	list='$(DISTFILES)'; for file in $$list; do \
	  case $$file in \
	    $(srcdir)/*) file=`echo "$$file" | sed "s|^$$srcdirstrip/||"`;; \
	    $(top_srcdir)/*) file=`echo "$$file" | sed "s|^$$topsrcdirstrip/|$(top_builddir)/|"`;; \
	  esac; \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  dir=`echo "$$file" | sed -e 's,/[^/]*$$,,'`; \
	  if test "$$dir" != "$$file" && test "$$dir" != "."; then \
	    dir="/$$dir"; \
	    $(mkinstalldirs) "$(distdir)$$dir"; \
	  else \
	    dir=''; \
	  fi; \
	  if test -d $$d/$$file; then \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -pR $(srcdir)/$$file $(distdir)$$dir || exit 1; \
	    fi; \
	    cp -pR $$d/$$file $(distdir)$$dir || exit 1; \
	  else \
	    test -f $(distdir)/$$file \
	    || cp -p $$d/$$file $(distdir)/$$file \
	    || exit 1; \
	  fi; \
	done
check-am: all-am
check: check-am
all-am: Makefile.mingw $(PROGRAMS) config.h

installdirs:
	$(mkinstalldirs) $(DESTDIR)$(bindir)

install: install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) -f Makefile.mingw $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	$(MAKE) -f Makefile.mingw $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	  INSTALL_STRIP_FLAG=-s \
	  `test -z '$(STRIP)' || \
	    echo "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'"` install
mostlyclean-generic:

clean-generic:

distclean-generic:
	-rm -f Makefile.mingw $(CONFIG_CLEAN_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
clean: clean-am

clean-am: clean-binPROGRAMS clean-generic mostlyclean-am

distclean: distclean-am

distclean-am: clean-am distclean-compile distclean-depend \
	distclean-generic distclean-hdr distclean-tags

dvi: dvi-am

dvi-am:

info: info-am

info-am:

install-data-am:

install-exec-am: install-binPROGRAMS

install-info: install-info-am

install-man:

installcheck-am:

maintainer-clean: maintainer-clean-am

maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-compile mostlyclean-generic

pdf: pdf-am

pdf-am:

ps: ps-am

ps-am:

uninstall-am: uninstall-binPROGRAMS uninstall-info-am

.PHONY: CTAGS GTAGS all all-am check check-am clean clean-binPROGRAMS \
	clean-generic ctags distclean distclean-compile \
	distclean-depend distclean-generic distclean-hdr distclean-tags \
	distdir dvi dvi-am info info-am install install-am \
	install-binPROGRAMS install-data install-data-am install-exec \
	install-exec-am install-info install-info-am install-man \
	install-strip installcheck installcheck-am installdirs \
	maintainer-clean maintainer-clean-generic mostlyclean \
	mostlyclean-compile mostlyclean-generic pdf pdf-am ps ps-am \
	tags uninstall uninstall-am uninstall-binPROGRAMS \
	uninstall-info-am

# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
